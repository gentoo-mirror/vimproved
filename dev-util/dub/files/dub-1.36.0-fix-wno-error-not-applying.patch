commit 2ace85947547a5d97ecf740ec4e3e36903b5ad1a
Author: Andrei Horodniceanu <a.horodniceanu@proton.me>
Date:   Sat Jan 13 11:42:16 2024 +0200

    Let uesr $DFLAGS override build settings as much as possible
    
    Signed-off-by: Andrei Horodniceanu <a.horodniceanu@proton.me>

diff --git a/source/dub/compilers/dmd.d b/source/dub/compilers/dmd.d
index 78fd9d4b..5b59d2b9 100644
--- a/source/dub/compilers/dmd.d
+++ b/source/dub/compilers/dmd.d
@@ -230,6 +230,11 @@ config    /etc/dmd.conf
 	{
 		enforceBuildRequirements(settings);
 
+		// Keep the current dflags at the end of the array so that they will overwrite other flags.
+		// This allows user $DFLAGS to modify flags added by us.
+		const dflagsTail = settings.dflags;
+		settings.dflags = [];
+
 		if (!(fields & BuildSetting.options)) {
 			foreach (t; s_options)
 				if (settings.options & t[0])
@@ -282,6 +287,8 @@ config    /etc/dmd.conf
 		if (platform.platform.canFind("posix") && (settings.options & BuildOption.pic))
 			settings.addDFlags("-fPIC");
 
+		settings.addDFlags(dflagsTail);
+
 		assert(fields & BuildSetting.dflags);
 		assert(fields & BuildSetting.copyFiles);
 	}
diff --git a/source/dub/compilers/gdc.d b/source/dub/compilers/gdc.d
index 0d34446e..3df8eda6 100644
--- a/source/dub/compilers/gdc.d
+++ b/source/dub/compilers/gdc.d
@@ -89,6 +89,11 @@ class GDCCompiler : Compiler {
 	{
 		enforceBuildRequirements(settings);
 
+		// Keep the current dflags at the end of the array so that they will overwrite other flags.
+		// This allows user $DFLAGS to modify flags added by us.
+		const dflagsTail = settings.dflags;
+		settings.dflags = [];
+
 		if (!(fields & BuildSetting.options)) {
 			foreach (t; s_options)
 				if (settings.options & t[0])
@@ -138,6 +143,8 @@ class GDCCompiler : Compiler {
 		if (settings.options & BuildOption.pic)
 			settings.addDFlags("-fPIC");
 
+		settings.addDFlags(dflagsTail);
+
 		assert(fields & BuildSetting.dflags);
 		assert(fields & BuildSetting.copyFiles);
 	}
diff --git a/source/dub/compilers/ldc.d b/source/dub/compilers/ldc.d
index 3cb90e5b..3959df61 100644
--- a/source/dub/compilers/ldc.d
+++ b/source/dub/compilers/ldc.d
@@ -107,6 +107,11 @@ config    /etc/ldc2.conf (x86_64-pc-linux-gnu)
 		import std.format : format;
 		enforceBuildRequirements(settings);
 
+		// Keep the current dflags at the end of the array so that they will overwrite other flags.
+		// This allows user $DFLAGS to modify flags added by us.
+		const dflagsTail = settings.dflags;
+		settings.dflags = [];
+
 		if (!(fields & BuildSetting.options)) {
 			foreach (t; s_options)
 				if (settings.options & t[0])
@@ -170,6 +175,8 @@ config    /etc/ldc2.conf (x86_64-pc-linux-gnu)
 			}
 		}
 
+		settings.addDFlags(dflagsTail);
+
 		assert(fields & BuildSetting.dflags);
 		assert(fields & BuildSetting.copyFiles);
 	}
diff --git a/source/dub/package_.d b/source/dub/package_.d
index 307ad78d..79be1ed2 100644
--- a/source/dub/package_.d
+++ b/source/dub/package_.d
@@ -422,10 +422,6 @@ class Package {
 	*/
 	void addBuildTypeSettings(ref BuildSettings settings, in BuildPlatform platform, string build_type)
 	const {
-		import std.process : environment;
-		string dflags = environment.get("DFLAGS", "");
-		settings.addDFlags(dflags.split());
-
 		if (auto pbt = build_type in m_info.buildTypes) {
 			logDiagnostic("Using custom build type '%s'.", build_type);
 			pbt.getPlatformSettings(settings, platform, this.path);
@@ -450,6 +446,11 @@ class Package {
 				case "syntax": settings.addOptions(syntaxOnly); break;
 			}
 		}
+
+		// Add environment DFLAGS last so that user specified values are not overriden by us.
+		import std.process : environment;
+		string dflags = environment.get("DFLAGS", "");
+		settings.addDFlags(dflags.split());
 	}
 
 	/** Returns the selected configuration for a certain dependency.
