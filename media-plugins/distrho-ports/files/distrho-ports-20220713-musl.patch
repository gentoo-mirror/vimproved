From b1cb337c50b8c87b67c3854cec2c57b68f8ae596 Mon Sep 17 00:00:00 2001
From: Violet Purcell <vimproved@inventati.org>
Date: Tue, 6 Jun 2023 03:10:34 +0000
Subject: [PATCH 1/2] JUCE: Fix build on musl

---
 .../source/modules/juce_core/juce_core.cpp    |  2 +-
 .../native/juce_linux_SystemStats.cpp         | 34 +++++++++++++++++--
 .../juce_core/system/juce_SystemStats.cpp     |  2 +-
 .../source/modules/juce_core/juce_core.cpp    |  2 +-
 .../native/juce_linux_SystemStats.cpp         | 34 +++++++++++++++++--
 .../juce_core/system/juce_SystemStats.cpp     |  2 +-
 .../source/modules/juce_core/juce_core.cpp    |  2 +-
 .../native/juce_linux_SystemStats.cpp         |  4 +--
 .../juce_core/system/juce_SystemStats.cpp     |  2 +-
 9 files changed, 70 insertions(+), 14 deletions(-)

diff --git a/libs/juce5/source/modules/juce_core/juce_core.cpp b/libs/juce5/source/modules/juce_core/juce_core.cpp
index 136dd284..4a5553ea 100644
--- a/libs/juce5/source/modules/juce_core/juce_core.cpp
+++ b/libs/juce5/source/modules/juce_core/juce_core.cpp
@@ -94,7 +94,7 @@
  #include <net/if.h>
  #include <sys/ioctl.h>
 
- #if ! JUCE_ANDROID
+ #if ! JUCE_ANDROID && defined __GLIBC__
   #include <execinfo.h>
  #endif
 #endif
diff --git a/libs/juce5/source/modules/juce_core/native/juce_linux_SystemStats.cpp b/libs/juce5/source/modules/juce_core/native/juce_linux_SystemStats.cpp
index 40f19187..3c25dcd5 100644
--- a/libs/juce5/source/modules/juce_core/native/juce_linux_SystemStats.cpp
+++ b/libs/juce5/source/modules/juce_core/native/juce_linux_SystemStats.cpp
@@ -129,9 +129,37 @@ static String getLocaleValue (nl_item key)
     return result;
 }
 
-String SystemStats::getUserLanguage()    { return getLocaleValue (_NL_IDENTIFICATION_LANGUAGE); }
-String SystemStats::getUserRegion()      { return getLocaleValue (_NL_IDENTIFICATION_TERRITORY); }
-String SystemStats::getDisplayLanguage() { return getUserLanguage() + "-" + getUserRegion(); }
+String SystemStats::getUserLanguage()
+{
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_LANGUAGE
+    if (auto langEnv = getenv ("LANG"))
+        return String::fromUTF8 (langEnv).upToLastOccurrenceOf (".UTF-8", false, true);
+
+    return {};
+   #else
+    return getLocaleValue (_NL_IDENTIFICATION_LANGUAGE);
+   #endif
+}
+
+String SystemStats::getUserRegion()
+{
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_TERRITORY
+    return {};
+   #else
+    return getLocaleValue (_NL_IDENTIFICATION_TERRITORY);
+   #endif
+}
+
+String SystemStats::getDisplayLanguage()
+{
+    auto result = getUserLanguage();
+    auto region = getUserRegion();
+
+    if (region.isNotEmpty())
+        result << "-" << region;
+
+    return result;
+}
 
 //==============================================================================
 void CPUInformation::initialise() noexcept
diff --git a/libs/juce5/source/modules/juce_core/system/juce_SystemStats.cpp b/libs/juce5/source/modules/juce_core/system/juce_SystemStats.cpp
index c073331b..d737a2a6 100644
--- a/libs/juce5/source/modules/juce_core/system/juce_SystemStats.cpp
+++ b/libs/juce5/source/modules/juce_core/system/juce_SystemStats.cpp
@@ -123,7 +123,7 @@ String SystemStats::getStackBacktrace()
 {
     String result;
 
-   #if JUCE_ANDROID || JUCE_MINGW
+   #if JUCE_ANDROID || JUCE_MINGW || (JUCE_LINUX && !defined __GLIBC__)
     jassertfalse; // sorry, not implemented yet!
 
    #elif JUCE_WINDOWS
diff --git a/libs/juce6/source/modules/juce_core/juce_core.cpp b/libs/juce6/source/modules/juce_core/juce_core.cpp
index 84ded5f5..b4c78750 100644
--- a/libs/juce6/source/modules/juce_core/juce_core.cpp
+++ b/libs/juce6/source/modules/juce_core/juce_core.cpp
@@ -102,7 +102,7 @@
  #include <net/if.h>
  #include <sys/ioctl.h>
 
- #if ! (JUCE_ANDROID || JUCE_WASM)
+ #if ! (JUCE_ANDROID || JUCE_WASM) && defined __GLIBC__
   #include <execinfo.h>
  #endif
 #endif
diff --git a/libs/juce6/source/modules/juce_core/native/juce_linux_SystemStats.cpp b/libs/juce6/source/modules/juce_core/native/juce_linux_SystemStats.cpp
index cd3068e6..e3dccf69 100644
--- a/libs/juce6/source/modules/juce_core/native/juce_linux_SystemStats.cpp
+++ b/libs/juce6/source/modules/juce_core/native/juce_linux_SystemStats.cpp
@@ -139,9 +139,37 @@ static String getLocaleValue (nl_item key)
     return result;
 }
 
-String SystemStats::getUserLanguage()     { return getLocaleValue (_NL_IDENTIFICATION_LANGUAGE); }
-String SystemStats::getUserRegion()       { return getLocaleValue (_NL_IDENTIFICATION_TERRITORY); }
-String SystemStats::getDisplayLanguage()  { return getUserLanguage() + "-" + getUserRegion(); }
+String SystemStats::getUserLanguage()
+{
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_LANGUAGE
+    if (auto langEnv = getenv ("LANG"))
+        return String::fromUTF8 (langEnv).upToLastOccurrenceOf (".UTF-8", false, true);
+
+    return {};
+   #else
+    return getLocaleValue (_NL_IDENTIFICATION_LANGUAGE);
+   #endif
+}
+
+String SystemStats::getUserRegion()
+{
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_TERRITORY
+    return {};
+   #else
+    return getLocaleValue (_NL_IDENTIFICATION_TERRITORY);
+   #endif
+}
+
+String SystemStats::getDisplayLanguage()
+{
+    auto result = getUserLanguage();
+    auto region = getUserRegion();
+
+    if (region.isNotEmpty())
+        result << "-" << region;
+
+    return result;
+}
 
 //==============================================================================
 void CPUInformation::initialise() noexcept
diff --git a/libs/juce6/source/modules/juce_core/system/juce_SystemStats.cpp b/libs/juce6/source/modules/juce_core/system/juce_SystemStats.cpp
index 813a23b2..99306c10 100644
--- a/libs/juce6/source/modules/juce_core/system/juce_SystemStats.cpp
+++ b/libs/juce6/source/modules/juce_core/system/juce_SystemStats.cpp
@@ -138,7 +138,7 @@ String SystemStats::getStackBacktrace()
 {
     String result;
 
-   #if JUCE_ANDROID || JUCE_MINGW || JUCE_WASM
+   #if JUCE_ANDROID || JUCE_MINGW || JUCE_WASM || (JUCE_LINUX && !defined __GLIBC__)
     jassertfalse; // sorry, not implemented yet!
 
    #elif JUCE_WINDOWS
diff --git a/libs/juce7/source/modules/juce_core/juce_core.cpp b/libs/juce7/source/modules/juce_core/juce_core.cpp
index f6fbfce2..9978e359 100644
--- a/libs/juce7/source/modules/juce_core/juce_core.cpp
+++ b/libs/juce7/source/modules/juce_core/juce_core.cpp
@@ -102,7 +102,7 @@
  #include <net/if.h>
  #include <sys/ioctl.h>
 
- #if ! (JUCE_ANDROID || JUCE_WASM)
+ #if ! (JUCE_ANDROID || JUCE_WASM) && defined __GLIBC__
   #include <execinfo.h>
  #endif
 #endif
diff --git a/libs/juce7/source/modules/juce_core/native/juce_linux_SystemStats.cpp b/libs/juce7/source/modules/juce_core/native/juce_linux_SystemStats.cpp
index 84abf88e..c1109fcb 100644
--- a/libs/juce7/source/modules/juce_core/native/juce_linux_SystemStats.cpp
+++ b/libs/juce7/source/modules/juce_core/native/juce_linux_SystemStats.cpp
@@ -198,7 +198,7 @@ String SystemStats::getComputerName()
 
 String SystemStats::getUserLanguage()
 {
-   #if JUCE_BSD
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_LANGUAGE
     if (auto langEnv = getenv ("LANG"))
         return String::fromUTF8 (langEnv).upToLastOccurrenceOf (".UTF-8", false, true);
 
@@ -210,7 +210,7 @@ String SystemStats::getUserLanguage()
 
 String SystemStats::getUserRegion()
 {
-   #if JUCE_BSD
+   #if JUCE_BSD || !defined _NL_IDENTIFICATION_TERRITORY
     return {};
    #else
     return getLocaleValue (_NL_IDENTIFICATION_TERRITORY);
diff --git a/libs/juce7/source/modules/juce_core/system/juce_SystemStats.cpp b/libs/juce7/source/modules/juce_core/system/juce_SystemStats.cpp
index 3fe9ac7f..beec9422 100644
--- a/libs/juce7/source/modules/juce_core/system/juce_SystemStats.cpp
+++ b/libs/juce7/source/modules/juce_core/system/juce_SystemStats.cpp
@@ -138,7 +138,7 @@ String SystemStats::getStackBacktrace()
 {
     String result;
 
-   #if JUCE_ANDROID || JUCE_MINGW || JUCE_WASM
+   #if JUCE_ANDROID || JUCE_MINGW || JUCE_WASM || (JUCE_LINUX && !defined __GLIBC__)
     jassertfalse; // sorry, not implemented yet!
 
    #elif JUCE_WINDOWS
-- 
2.41.0

From ebae0ccbd15e0017766ba1030ea0ea00de3f469d Mon Sep 17 00:00:00 2001
From: Violet Purcell <vimproved@inventati.org>
Date: Tue, 6 Jun 2023 03:10:48 +0000
Subject: [PATCH 2/2] libs/juced: Fix build on musl

---
 .../source/audio/osc/jucetice_OpenSoundBundle.cpp  |  2 +-
 .../source/audio/osc/jucetice_OpenSoundMessage.cpp | 14 +++++++-------
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/libs/juced/source/audio/osc/jucetice_OpenSoundBundle.cpp b/libs/juced/source/audio/osc/jucetice_OpenSoundBundle.cpp
index 16a71175..d0089d92 100755
--- a/libs/juced/source/audio/osc/jucetice_OpenSoundBundle.cpp
+++ b/libs/juced/source/audio/osc/jucetice_OpenSoundBundle.cpp
@@ -179,7 +179,7 @@ char *OpenSoundBundle::getData()
             dataBuffer[4] = 'd';
             dataBuffer[5] = 'l';
             dataBuffer[6] = 'e';
-            dataBuffer[7] = static_cast<char>(NULL);
+            dataBuffer[7] = static_cast<char>(0);
             i += 7;
         }
         //timeTag
diff --git a/libs/juced/source/audio/osc/jucetice_OpenSoundMessage.cpp b/libs/juced/source/audio/osc/jucetice_OpenSoundMessage.cpp
index 27c8a792..16e9b0f9 100755
--- a/libs/juced/source/audio/osc/jucetice_OpenSoundMessage.cpp
+++ b/libs/juced/source/audio/osc/jucetice_OpenSoundMessage.cpp
@@ -136,7 +136,7 @@ OpenSoundMessage::OpenSoundMessage(char *data, const int size)
 				//tempstr[tempstr.length()] = static_cast<char>(NULL); //Terminator.
 
 				tempstr = tempstr.replaceCharacter (tempstr.getLastCharacter(),
-													static_cast<char>(NULL)); //Terminator.
+													static_cast<char>(0)); //Terminator.
 
                 stringArray.add (tempstr);
 
@@ -248,13 +248,13 @@ char *OpenSoundMessage::getData()
             if(addressCount == addressLength)
             {
                 ++i;
-                buffer[i] = static_cast<char>(NULL);
+                buffer[i] = static_cast<char>(0);
                 ++addressCount;
                 //Add any packing bytes.
                 while(addressCount%4)
                 {
                     ++i;
-                    buffer[i] = static_cast<char>(NULL);
+                    buffer[i] = static_cast<char>(0);
                     ++addressCount;
                 }
             }
@@ -268,13 +268,13 @@ char *OpenSoundMessage::getData()
             if(typeTagCount == typeTagLength)
             {
                 ++i;
-                buffer[i] = static_cast<char>(NULL);
+                buffer[i] = static_cast<char>(0);
                 ++typeTagCount;
                 //Add any packing bytes.
                 while(typeTagCount%4)
                 {
                     ++i;
-                    buffer[i] = static_cast<char>(NULL);
+                    buffer[i] = static_cast<char>(0);
                     ++typeTagCount;
                 }
             }
@@ -324,13 +324,13 @@ char *OpenSoundMessage::getData()
                         buffer[i] = stringArray[stringCount][j-1];
                         ++i;
                     }
-                    buffer[i] = static_cast<char>(NULL);
+                    buffer[i] = static_cast<char>(0);
 
                     //Add any packing bytes.
                     while(j%4)
                     {
                         ++i;
-                        buffer[i] = static_cast<char>(NULL);
+                        buffer[i] = static_cast<char>(0);
                         ++j;
                     }
 
-- 
2.41.0

