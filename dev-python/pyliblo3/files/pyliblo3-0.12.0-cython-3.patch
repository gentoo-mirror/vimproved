From f0ab0a16688a7a812df8584d2a9a2397d2d50047 Mon Sep 17 00:00:00 2001
From: Violet Purcell <vimproved@inventati.org>
Date: Tue, 5 Sep 2023 14:09:32 -0400
Subject: [PATCH] Fix build with cython 3

Signed-off-by: Violet Purcell <vimproved@inventati.org>
---
 setup.py      | 2 +-
 src/liblo.pyx | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/setup.py b/setup.py
index f300f2c..3524a7d 100755
--- a/setup.py
+++ b/setup.py
@@ -48,7 +48,7 @@ setup(
     ext_modules=[
         Extension(
             'liblo', 
-            sources = ['src/liblo.pyx', 'src/liblo.pxd'],
+            sources = ['src/liblo.pyx'],
             extra_compile_args=compile_args,
             libraries=['lo'],
             library_dirs=library_dirs,
diff --git a/src/liblo.pyx b/src/liblo.pyx
index 63cc058..12cbfc0 100644
--- a/src/liblo.pyx
+++ b/src/liblo.pyx
@@ -219,7 +219,7 @@ class ServerError(Exception):
 
 
 cdef int _msg_callback(const_char *path, const_char *types, lo_arg **argv,
-                       int argc, lo_message msg, void *cb_data) with gil:
+                       int argc, lo_message msg, void *cb_data) noexcept with gil:
     cdef int i
     cdef char t
     cdef unsigned char *ptr
@@ -271,19 +271,19 @@ cdef int _msg_callback(const_char *path, const_char *types, lo_arg **argv,
     return r if r is not None else 0
 
 
-cdef int _bundle_start_callback(lo_timetag t, void *cb_data) with gil:
+cdef int _bundle_start_callback(lo_timetag t, void *cb_data) noexcept with gil:
     cb = <object>cb_data
     r = cb.start_func(_timetag_to_double(t), cb.user_data)
     return r if r is not None else 0
 
 
-cdef int _bundle_end_callback(void *cb_data) with gil:
+cdef int _bundle_end_callback(void *cb_data) noexcept with gil:
     cb = <object>cb_data
     r = cb.end_func(cb.user_data)
     return r if r is not None else 0
 
 
-cdef void _err_handler(int num, const_char *msg, const_char *where) with gil:
+cdef void _err_handler(int num, const_char *msg, const_char *where) noexcept with gil:
     # can't raise exception in cdef callback function, so use a global variable
     # instead
     global __exception
-- 
2.42.0

