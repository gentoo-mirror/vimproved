From d5e918628985e497fcffec6568bb0a4a61582830 Mon Sep 17 00:00:00 2001
From: Alex Willmer <alex@moreati.org.uk>
Date: Fri, 7 Jul 2023 21:32:02 +0100
Subject: [PATCH] ansible_mitogen: Fix --ask-become-pass, add test coverage

Previously f1503874de82353cbed8b51408d20fdfa899f8f7 fixed the priority of
ansible_become_pass over ansible_become_password, but broke --ask-become-pass.
Fixes #952.
---
 .ci/ansible_tests.py                          | 11 +++++++++-
 ansible_mitogen/transport_config.py           | 16 ++++++++++----
 docs/changelog.rst                            |  1 +
 tests/ansible/hosts/default.hosts             |  2 ++
 .../transport_config/become_pass.yml          |  5 +++--
 tests/ansible/regression/all.yml              |  1 +
 tests/ansible/regression/become_test.yml      |  9 ++++++++
 .../regression/issue_952__ask_become_pass.yml | 21 +++++++++++++++++++
 tests/requirements.txt                        |  2 ++
 9 files changed, 61 insertions(+), 7 deletions(-)
 create mode 100644 tests/ansible/regression/become_test.yml
 create mode 100644 tests/ansible/regression/issue_952__ask_become_pass.yml

diff --git a/ansible_mitogen/transport_config.py b/ansible_mitogen/transport_config.py
index 5fc781856..1fc1e80a1 100644
--- a/ansible_mitogen/transport_config.py
+++ b/ansible_mitogen/transport_config.py
@@ -79,7 +79,6 @@
 except ImportError:
     from ansible.vars.unsafe_proxy import AnsibleUnsafeText
 
-import ansible_mitogen.loaders
 import mitogen.core
 
 
@@ -436,9 +435,18 @@ def become_user(self):
         return self._play_context.become_user
 
     def become_pass(self):
-        become_method = self.become_method()
-        become_plugin = ansible_mitogen.loaders.become_loader.get(become_method)
-        become_pass = become_plugin.get_option('become_pass', hostvars=self._task_vars)
+        # become_pass is owned/provided by the active become plugin. However
+        # PlayContext is intertwined with it. Known complications
+        # - ansible_become_password is higher priority than ansible_become_pass,
+        #   `play_context.become_pass` doesn't obey this (atleast with Mitgeon).
+        # - `meta: reset_connection` runs `connection.reset()` but
+        #   `ansible_mitogen.connection.Connection.reset()` recreates the
+        #   connection object, setting `connection.become = None`.
+        become_plugin = self._connection.become
+        try:
+            become_pass = become_plugin.get_option('become_pass', playcontext=self._play_context)
+        except AttributeError:
+            become_pass = self._play_context.become_pass
         return optional_secret(become_pass)
 
     def password(self):
