From 7301914755f5843f1095ca31114149a3be7d4ba8 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Fri, 6 Oct 2023 12:31:29 +0300
Subject: [PATCH] dri: Remove __driDriverExtensions leftovers

Android-14/clang-17 throws an error with it:

ld.lld: error: version script assignment of 'global' to symbol
   '__driDriverExtensions' failed: symbol not defined

Fixes: d43e6a9a497f ("dri: Remove the megadriver compat stub")
Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
Acked-by: Erik Faye-Lund <erik.faye-lund@collabora.com>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/25587>
--- a/include/GL/internal/dri_interface.h
+++ b/include/GL/internal/dri_interface.h
@@ -678,14 +678,6 @@ struct __DRIuseInvalidateExtensionRec {
    __DRIextension base;
 };
 
-/**
- * The remaining extensions describe driver extensions, immediately
- * available interfaces provided by the driver.  To start using the
- * driver, dlsym() for the __DRI_DRIVER_EXTENSIONS symbol and look for
- * the extension you need in the array.
- */
-#define __DRI_DRIVER_EXTENSIONS "__driDriverExtensions"
-
 /**
  * This symbol replaces the __DRI_DRIVER_EXTENSIONS symbol, and will be
  * suffixed by "_drivername", allowing multiple drivers to be built into one
--- a/src/gallium/targets/dri/dri.sym
+++ b/src/gallium/targets/dri/dri.sym
@@ -1,6 +1,5 @@
 {
 	global:
-		__driDriverExtensions;
 		__driDriverGetExtensions*;
 		nouveau_drm_screen_create;
 		radeon_drm_winsys_create;
--- a/src/loader/loader.c
+++ b/src/loader/loader.c
@@ -836,8 +836,6 @@ loader_open_driver(const char *driver_name,
       free(get_extensions_name);
    }
 
-   if (!extensions)
-      extensions = dlsym(driver, __DRI_DRIVER_EXTENSIONS);
    if (extensions == NULL) {
       log_(_LOADER_WARNING,
            "MESA-LOADER: driver exports no extensions (%s)\n", dlerror());
-- 
GitLab

From 4b5851f98fcdb4fc8e3fab44f11210366e51366b Mon Sep 17 00:00:00 2001
From: Violet Purcell <vimproved@inventati.org>
Date: Sun, 1 Oct 2023 17:35:00 -0400
Subject: [PATCH] gallium: Fix undefined symbols in dri.sym

Currently, dri.sym unconditionally uses symbols from gallium drivers
that may not be enabled, which causes linking to fail with
--no-undefined-version (as is default in LLD 17), and can cause issues
with LTO. This commit adds logic to generate dri.sym based on the enabled
gallium drivers, ensuring only defined symbols are used.

Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/8003
Signed-off-by: Violet Purcell <vimproved@inventati.org>
--- a/src/gallium/targets/dri/dri.sym
+++ /dev/null
@@ -1,11 +0,0 @@
-{
-	global:
-		__driDriverGetExtensions*;
-		nouveau_drm_screen_create;
-		radeon_drm_winsys_create;
-		amdgpu_winsys_create;
-		fd_drm_screen_create_renderonly;
-		ac_init_shared_llvm_once;
-	local:
-		*;
-};
--- /dev/null
+++ b/src/gallium/targets/dri/dri.sym.in
@@ -0,0 +1,11 @@
+{
+	global:
+		__driDriverGetExtensions*;
+		@nouveau_drm_screen_create@
+		@radeon_drm_winsys_create@
+		@amdgpu_winsys_create@
+		@fd_drm_screen_create_renderonly@
+		@ac_init_shared_llvm_once@
+	local:
+		*;
+};
--- a/src/gallium/targets/dri/meson.build
+++ b/src/gallium/targets/dri/meson.build
@@ -28,9 +28,25 @@ gallium_dri_ld_args = []
 gallium_dri_link_depends = []
 gallium_dri_drivers = []
 
+dri_sym_config = configuration_data()
+
+foreach d : [[with_gallium_r300 or with_gallium_radeonsi or with_gallium_r600, 'radeon_drm_winsys_create'],
+             [with_gallium_radeonsi, 'amdgpu_winsys_create'],
+             [with_gallium_nouveau, 'nouveau_drm_screen_create'],
+             [with_gallium_freedreno, 'fd_drm_screen_create_renderonly'],
+             [with_llvm and with_gallium_radeonsi, 'ac_init_shared_llvm_once']]
+  if d[0]
+    dri_sym_config.set(d[1], d[1] + ';')
+  else
+    dri_sym_config.set(d[1], '')
+  endif
+endforeach
+
+dri_sym = configure_file(input : 'dri.sym.in', output : 'dri.sym', configuration : dri_sym_config)
+
 if with_ld_version_script
-  gallium_dri_ld_args += ['-Wl,--version-script', join_paths(meson.current_source_dir(), 'dri.sym')]
-  gallium_dri_link_depends += files('dri.sym')
+  gallium_dri_ld_args += ['-Wl,--version-script', join_paths(meson.current_build_dir(), 'dri.sym')]
+  gallium_dri_link_depends += dri_sym
 endif
 if with_ld_dynamic_list
   gallium_dri_ld_args += ['-Wl,--dynamic-list', join_paths(meson.current_source_dir(), '../dri.dyn')]
-- 
GitLab
